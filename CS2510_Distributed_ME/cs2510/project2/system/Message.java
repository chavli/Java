package cs2510.project2.system;

import java.io.Serializable;

public class Message implements Serializable {
    /**
     * auto-generated by eclipse
     */
    private static final long serialVersionUID = 7850618099901128624L;
    public static enum MessageType {
        //default type
        NO_TYPE,
        
        SYS_START,      //start the distributed system

        //General system message types
        // name-server <-> name-server
        SYS_NEW,		        //a new local nameserver has joined (body is empty)
        SYS_NEW_R,		        //a response for joining the system (body, response empty)
        SYS_NEW_INFORM,         //tell local name-servers that a new n-s has joined (body is address of new n-s, response empty)
        SYS_JOIN,               //a new Node (user or resource) has entered the system (body is UID of new node)
        SYS_LEAVE,              //a Node has left the system (body is uid of dead node)
        SYS_LOOKUP,             //a lookup request from a local name server (body is body of original message that a lookup was generated for)
        SYS_LOOKUP_R,           //global name server response to a lookup (response is address of requested node)
        SYS_LOOKUP_NULL,        //global name server has no record of node (body is uid of requesting node, followed by uid of requested node)
        SYS_INVALIDATE_NODE,    //propagated from node to GNS (for each node type)
        SYS_INVALIDATE_COPY,    
        SYS_INVALIDATE_CACHE,
        SYS_REMOVE_COPY,
        SYS_NEW_PRIMARY,
        SYS_TOK_KILL,        
        SYS_TOK_NEW,

        // node <-> name-server
        SYS_ALLUSER,    //a request for uids of all user nodes in the system (body is empty)
        SYS_ALLRESOURCE,//a request for uids of all resources in the system (body is empty)
        SYS_RANDRESOURCE,
        SYS_RANDTOKEN,
        NODE_ALLUSER_R,     //... (response is list of all nodes)
        NODE_ALLRESOURCE_R, //... (response is list of all nodes)
        NODE_RANDRESOURCE_R,
        NODE_RANDTOKEN_R,
        NODE_ALLUSER_NULL,
        NODE_ALLRESOURCE_NULL,
        NODE_RANDRESOURCE_NULL,

        //resource(file) messages
        FILE_RD,        //request resource node for its contents
        FILE_RD_R,      //message containing the file contents at time of request
        FILE_WR,        //message that contains data to be written
        FILE_WR_R,
        FILE_INV,       //invalidate a resource node

        //check node statuses
        PING,
        PONG,

        //token-less ME message types
        RA_REQ,
        RA_ACK,

        //tree-based ME message types
        TREE_ADD,       //add a new user node to the raymond tree
        TREE_ADD_R,     //global name server response to an add
        TREE_DEL,       //delete a node from the raymond tree
        
        TOK_REQ,       //token request for writes
        TOK_ACK,       //acknowledgement of a token request
        TOK_REL,       //a token has been released
        TOK_READ       //read request
    }

    // Uids and Addresses should only be used for message delivery
    // They should also be set every time a message is passed
    private MessageType type;
    private int timestamp;
    private String source_uid, source_addr, dest_uid, dest_addr;
    private String body, attachment;
    
    public Message(){
        this.type = MessageType.NO_TYPE;
        this.source_uid = "";
        this.source_addr = "127.0.0.1";
        this.dest_uid = "";
        this.dest_addr = "127.0.0.1";
        this.body = "";
        this.attachment = "";
        this.timestamp = -1;
    }

    public Message(Message rhs) {
        this.type = rhs.type;
        this.source_uid = rhs.source_uid;
        this.source_addr = rhs.source_addr;
        this.dest_uid = rhs.dest_uid;
        this.dest_addr = rhs.dest_addr;
        this.body = rhs.body;
        this.attachment = rhs.attachment;
	    this.timestamp = rhs.timestamp;
    }

    public Message(String body, String attachment, MessageType type){
        this.source_uid = "";
        this.source_addr = "127.0.0.1";
        this.dest_uid = "";
        this.dest_addr = "127.0.0.1";
        this.body = new String(body);
        this.attachment = attachment;
        this.type = type;
        this.timestamp = -1;
    }
    
    public Message(String body, String attachment, MessageType type, int timestamp){
        this.source_uid = "";
        this.source_addr = "127.0.0.1";
        this.dest_uid = "";
        this.dest_addr = "127.0.0.1";
        this.body = new String(body);
        this.attachment = new String(attachment);
        this.type = type;
        this.timestamp = timestamp;
    }

    @Override
    public String toString(){
        String str = "[\n-- Message Header --\n" +
            "Type:\t\t" + this.type + "\n" +
            "Source UID:\t" + this.source_uid + "\n" +
            "Source Addr:\t" + this.source_addr + "\n" +
            "Dest UID:\t" + this.dest_uid + "\n" +
            "Dest Addr:\t" + this.dest_addr + "\n" +
            "Timestamp:\t" + this.timestamp + "\n" +
            "--Message Body --\n" + this.body + "\n" +
            "--Message Attachment --\n" + this.attachment +
            "\n]";
        return str;
    }

    //setters and getters
    public void setSourceUid(String uid) { this.source_uid = uid; }
    public void setSourceAddr(String addr) { this.source_addr = addr; }
    public void setDestUid(String uid) { this.dest_uid = uid; }
    public void setDestAddr(String addr) { this.dest_addr = addr; }
    public void setBody(String message) { this.body = message; }
    public void setAttachment(String attachment) { this.attachment = attachment; }
    public void setType(MessageType type) { this.type = type; }
    public void setType(int timestamp) { this.timestamp = timestamp; }

    public String getSourceUid() { return this.source_uid; }
    public String getSourceAddr() { return this.source_addr; }
    public String getDestUid() { return this.dest_uid; }
    public String getDestAddr() { return this.dest_addr; }
    public String getBody() { return this.body; }
    public String getAttachment() { return this.attachment; }
    public MessageType getType() { return this.type; }
    public int getTimestamp() { return this.timestamp; }
}
